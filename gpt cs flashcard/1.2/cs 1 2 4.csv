"What is a programming paradigm?","A style or way of programming that provides structure and rules for code development."
"Name the four main paradigms.","Procedural, Object-Oriented, Functional, Declarative."
"What is the procedural paradigm?","Code is written as a sequence of step-by-step instructions using procedures and functions."
"✅/❌ Procedural","✅ Easy to follow, efficient / ❌ Can be hard to reuse or maintain."
"What is structured programming?","Subset of procedural programming using control structures like IF, WHILE, FOR."
"What is top-down programming?","Breaking down a problem into smaller parts using modular design."
"What is object-oriented programming (OOP)?","A paradigm where data and operations are grouped into objects based on real-world entities."
"Key features of OOP?","Encapsulation, Inheritance, Polymorphism, Abstraction."
"What is encapsulation?","Bundling data and methods together; hides internal state from outside access."
"✅/❌ Encapsulation","✅ Improves security and modularity / ❌ May increase complexity."
"What is inheritance?","One class can inherit properties and methods from another class."
"✅/❌ Inheritance","✅ Promotes code reuse / ❌ Can lead to tightly coupled code."
"What is polymorphism?","Objects can behave differently depending on their class while using the same interface."
"✅/❌ Polymorphism","✅ Increases flexibility / ❌ Can be hard to trace bugs."
"What is abstraction?","Hiding complex details and showing only relevant features."
"✅/❌ Abstraction","✅ Simplifies design / ❌ Overuse may reduce clarity."
"What is the functional paradigm?","Uses functions as the building blocks, avoids changing state and mutable data."
"✅/❌ Functional","✅ Predictable, testable / ❌ Can be difficult to understand for beginners."
"What are first-class functions?","Functions treated as values — passed as arguments or returned from other functions."
"What is recursion?","A function calling itself to solve smaller instances of a problem."
"✅/❌ Recursion","✅ Elegant solution / ❌ Can cause stack overflow if not carefully managed."
"What is declarative programming?","Focuses on what the program should accomplish, not how."
"What is logic programming?","A type of declarative programming using facts and rules (e.g., Prolog)."
"What is a fact in logic programming?","A statement that is always true (e.g., parent(john, mary))."
"What is a rule in logic programming?","Defines a relationship based on conditions (e.g., grandparent(X,Y) :- parent(X,Z), parent(Z,Y))."
"✅/❌ Logic programming","✅ Great for knowledge-based systems / ❌ Not suitable for all problems."
"Declarative vs Imperative?","Declarative = what to do (e.g., SQL); Imperative = how to do it (e.g., Python, C)."
"What is a low-level language?","Languages close to machine code like assembly."
"✅/❌ Low-level","✅ Fast, direct hardware control / ❌ Hard to write and understand."
"What is a high-level language?","Languages closer to human language, easier to code in (e.g., Python, Java)."
"✅/❌ High-level","✅ Easy to develop and debug / ❌ Less control over hardware."
"What is machine code?","Binary code that the CPU can execute directly."
"What is assembly language?","Low-level language using mnemonics; each instruction maps to machine code."
"What are mnemonics in assembly?","Short abbreviations for machine instructions (e.g., LDA, STA, ADD)."
"What is a label in assembly?","A symbolic name representing a memory location or instruction line."
"What is a DAT statement?","Used to reserve memory for storing variables (e.g., COUNT DAT 0)."
"What is opcode?","The part of a machine code or assembly instruction that specifies the operation to perform."
"What is operand?","The part of a machine code or assembly instruction that provides data or memory address."
"What is immediate addressing?","Operand is the actual value (e.g., LDA #5 loads 5)."
"What is direct addressing?","Operand is the memory address where the value is stored."
"What is indirect addressing?","Operand is a memory location that holds another address."
"What is indexed addressing?","Uses an index register to offset a base address."
"✅/❌ Indexed addressing","✅ Useful for accessing arrays / ❌ More complex, slower."
"What is relative addressing?","Offset is added to the current Program Counter (PC) value."
"✅/❌ Relative addressing","✅ Good for branching and position independence / ❌ Not suitable for random data access."
"What is a Little Man Computer (LMC)?","A simplified model of a computer used to teach assembly principles."
"Key LMC instructions?","INP, OUT, LDA, STA, ADD, SUB, BRZ, BRP, BRA, HLT."
"What does LDA do in LMC?","Loads a value from memory into the accumulator."
"What does STA do in LMC?","Stores the value from the accumulator into memory."
"What does ADD do in LMC?","Adds the value from memory to the accumulator."
"What does SUB do in LMC?","Subtracts the value from memory from the accumulator."
"What does BRA do in LMC?","Branch always — jumps to a specified label."
"What does BRZ do in LMC?","Branch if zero — jumps if accumulator is zero."
"What does BRP do in LMC?","Branch if positive — jumps if accumulator is zero or positive."
"What does HLT do in LMC?","Halts the program."
"What does INP do in LMC?","Takes user input into the accumulator."
"What does OUT do in LMC?","Outputs the value in the accumulator."
"What is the accumulator in LMC?","A special register used to store results of arithmetic and logic operations."
"Why use labels in LMC?","To make branching and memory management more readable."
"Why is DAT used at the end of LMC programs?","To declare and reserve memory addresses for variables after code."
"What is the purpose of addressing modes?","To provide flexible and efficient ways to access and modify memory data."
"Indexed vs Relative addressing?","Indexed: data access using base+index; Relative: branching using PC+offset."
"What is a translator?","Software that converts source code into machine code."
"What are the types of translators?","Compiler, Interpreter, Assembler."
"What is a compiler?","Translates entire code into machine code before execution."
"What is an interpreter?","Translates code line-by-line during execution."
"What is an assembler?","Translates assembly language into machine code."
"What is an opcode?","The part of a machine code instruction that specifies the operation."
"What is an operand?","The part of a machine code instruction that specifies the data or address."
"What are addressing modes?","Ways of specifying where data is stored for an instruction."
"List the addressing modes.","Immediate, Direct, Indirect, Indexed, Relative."
"What is the purpose of addressing modes?","To provide flexible and efficient ways to reference memory."