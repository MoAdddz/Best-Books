"What is application software?","Software that helps users perform specific tasks (e.g., word processor, spreadsheet)."
"What is general-purpose software?","Software used for a wide range of common tasks (e.g., Microsoft Word, Excel)."
"✅/❌ General-purpose software","✅ Widely used, cost-effective / ❌ May lack specialised features."
"What is special-purpose software?","Software designed for a specific task (e.g., payroll system, CAD)."
"✅/❌ Special-purpose software","✅ Tailored to task, efficient / ❌ Not flexible, can be expensive."
"What is bespoke software?","Custom-built software to meet the specific needs of a user or organisation."
"✅/❌ Bespoke software","✅ Fully customised / ❌ Expensive, time-consuming, may have bugs."
"What is off-the-shelf software?","Pre-built software available for general use."
"✅/❌ Off-the-shelf software","✅ Cheaper, faster to deploy, well-tested / ❌ Less tailored, may lack specific features."
"What is open source software?","Software where source code is available for use, modification, and sharing."
"✅/❌ Open source software","✅ Free, flexible, community support / ❌ May lack official support, varied quality."
"What is closed source software?","Proprietary software where source code is hidden and owned by the developer."
"✅/❌ Closed source software","✅ Secure, professional support / ❌ Not modifiable, usually paid."
"What is system software?","Software that manages the hardware and system operations (e.g., OS, utilities)."
"What is utility software?","Programs designed to maintain, analyse, and optimise a computer (e.g., antivirus, defrag)."
"What are translators?","Programs that convert source code into machine code."
"Types of translators?","Compiler, Interpreter, Assembler."
"What is a compiler?","Translates all code into machine code before execution. Outputs an executable."
"✅/❌ Compiler","✅ Fast execution, protects code / ❌ Slow to compile, harder to debug."
"What is an interpreter?","Translates and runs code line-by-line. No executable output."
"✅/❌ Interpreter","✅ Easy to test/debug, cross-platform / ❌ Slower, source code exposed."
"What is an assembler?","Converts assembly language to machine code. One-to-one translation."
"✅/❌ Assembler","✅ Direct hardware control / ❌ Complex, error-prone."
"What is source code?","The original high-level or assembly code written by a programmer."
"What is object code?","The machine code output produced by a translator."
"What is intermediate code?","Platform-independent code (e.g., bytecode) that runs on a virtual machine."
"✅/❌ Intermediate code","✅ Portable, protects source / ❌ Slower, needs virtual machine."
"What is a library?","Pre-written, pre-compiled routines that can be reused by programs."
"✅/❌ Libraries","✅ Saves time, tested and reliable / ❌ May not fit all needs, adds dependency."
"What is static linking?","Library code is embedded into the final program during compile time."
"✅/❌ Static linking","✅ No external dependencies / ❌ Larger executable size."
"What is dynamic linking?","Program links to external library at run-time."
"✅/❌ Dynamic linking","✅ Smaller file size, easy updates / ❌ Requires library to be present at runtime."
"What is software licensing?","A legal agreement that governs the use and distribution of software."
"What is a proprietary license?","Restricts access to source code; user must pay and cannot modify."
"What is a free software license?","User can use, modify, and distribute software freely."
"What is the difference between free and open source software?","Free software focuses on user freedom; open source focuses on collaborative development, but both grant access to code."
"What are software updates and patches?","Fixes or improvements released by developers to improve functionality or security."
"Why are patches important?","They fix bugs, close security vulnerabilities, and enhance performance."
"What are drivers?","Software that allows the OS to communicate with hardware devices."
"✅/❌ Drivers","✅ Ensures compatibility / ❌ Wrong drivers can cause errors or crashes."
"What is firmware?","Software programmed into hardware (e.g., BIOS, routers) that controls basic functions."
"✅/❌ Firmware","✅ Efficient, permanent / ❌ Hard to update or replace."
"What is embedded software?","Software programmed into dedicated devices (e.g., microwave, printer)."
"✅/❌ Embedded software","✅ Fast and efficient for task / ❌ Hard to reprogram or upgrade."
"Why is version control important in software development?","Tracks changes, allows collaboration, and enables rollbacks."
"Example of version control system?","Git."
"What is refactoring in software development?","Improving code structure without changing functionality."
"✅/❌ Refactoring","✅ Improves readability and maintainability / ❌ Can introduce bugs if done poorly."
"What is documentation in software development?","Written descriptions of code functionality, design, and usage."
"✅/❌ Documentation","✅ Helps collaboration and maintenance / ❌ Time-consuming, often neglected."
"Why is testing important in software development?","Ensures program works correctly and meets requirements."
"What are the types of software testing?","White box, black box, alpha, beta, system testing."
"What is white box testing?","Tests internal code logic; developer knows code structure."
"What is black box testing?","Tests functionality without knowing internal code."
"What is alpha testing?","Done by developers at development site."
"What is beta testing?","Done by real users in a real environment before final release."
"What is system testing?","Tests the complete integrated system to validate against requirements."
"✅/❌ System testing","✅ Validates entire product / ❌ Time-consuming, requires thorough planning."
"What is validation?","Checks whether the software meets the user’s needs and requirements."
"What is verification?","Checks that the software was built correctly according to design specs."